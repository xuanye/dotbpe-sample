// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: message/qpaper.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Survey.Protocols {

  /// <summary>Holder for reflection information generated from message/qpaper.proto</summary>
  public static partial class QpaperReflection {

    #region Descriptor
    /// <summary>File descriptor for message/qpaper.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static QpaperReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRtZXNzYWdlL3FwYXBlci5wcm90bxIGZG90YnBlGhNkb3RicGVfb3B0aW9u",
            "LnByb3RvGhRtZXNzYWdlL2NvbW1vbi5wcm90byLRAQoNU2F2ZVFQYXBlclJl",
            "cRIRCgljbGllbnRfaXAYASABKAkSEAoIaWRlbnRpdHkYAiABKAkSFAoMeF9y",
            "ZXF1ZXN0X2lkGAMgASgJEhEKCXFwYXBlcl9pZBgKIAEoBRIPCgdzdWJqZWN0",
            "GAsgASgJEhIKCnN0YXJ0X3RpbWUYDCABKAkSEAoIZW5kX3RpbWUYDSABKAkS",
            "EwoLZGVzY3JpcHRpb24YDiABKAkSJgoJcXVlc3Rpb25zGA8gAygLMhMuZG90",
            "YnBlLkRUT1F1ZXN0aW9uIjoKDVNhdmVRUGFwZXJSc3ASFgoOcmV0dXJuX21l",
            "c3NhZ2UYASABKAkSEQoJcXBhcGVyX2lkGAogASgFIogBCg5RdWVyeVFQYXBl",
            "clJlcRIRCgljbGllbnRfaXAYASABKAkSEAoIaWRlbnRpdHkYAiABKAkSFAoM",
            "eF9yZXF1ZXN0X2lkGAMgASgJEg0KBXF1ZXJ5GAogASgJEhIKCmNoZWNrX3Jv",
            "bGUYCyABKAgSDAoEcGFnZRgMIAEoBRIKCgJycBgNIAEoBSJXCg1RUGFwZXJM",
            "aXN0UnNwEhYKDnJldHVybl9tZXNzYWdlGAEgASgJEh8KBGxpc3QYCiADKAsy",
            "ES5kb3RicGUuRFRPUVBhcGVyEg0KBXRvdGFsGAsgASgFInAKDEdldFFQYXBl",
            "clJlcRIRCgljbGllbnRfaXAYASABKAkSEAoIaWRlbnRpdHkYAiABKAkSFAoM",
            "eF9yZXF1ZXN0X2lkGAMgASgJEhEKCXFwYXBlcl9pZBgKIAEoBRISCgpjaGVj",
            "a19yb2xlGAsgASgIIpoBCglRUGFwZXJSc3ASFgoOcmV0dXJuX21lc3NhZ2UY",
            "ASABKAkSEQoJcXBhcGVyX2lkGAsgASgFEg8KB3N1YmplY3QYDCABKAkSEgoK",
            "c3RhcnRfdGltZRgNIAEoCRIQCghlbmRfdGltZRgOIAEoCRITCgtkZXNjcmlw",
            "dGlvbhgPIAEoCRIWCg5jcmVhdGVfdXNlcl9pZBgQIAEoCSJWCg1RUGFwZXJG",
            "dWxsUnNwEhYKDnJldHVybl9tZXNzYWdlGAEgASgJEi0KBnFwYXBlchgKIAEo",
            "CzIdLmRvdGJwZS5EVE9RUGFwZXJXaXRoUXVlc3Rpb24iawoMQWRkQVBhcGVy",
            "UmVxEhEKCWNsaWVudF9pcBgBIAEoCRIQCghpZGVudGl0eRgCIAEoCRIUCgx4",
            "X3JlcXVlc3RfaWQYAyABKAkSEQoJcXBhcGVyX2lkGAogASgFEg0KBWNvdW50",
            "GAsgASgFIl8KD0dldFFQYXBlclN0YVJlcRIRCgljbGllbnRfaXAYASABKAkS",
            "EAoIaWRlbnRpdHkYAiABKAkSFAoMeF9yZXF1ZXN0X2lkGAMgASgJEhEKCXFw",
            "YXBlcl9pZBgKIAEoBSKCAQoMUVBhcGVyU3RhUnNwEhYKDnJldHVybl9tZXNz",
            "YWdlGAEgASgJEi0KBnFwYXBlchgKIAEoCzIdLmRvdGJwZS5EVE9RUGFwZXJX",
            "aXRoUXVlc3Rpb24SKwoKc3RhX2RldGFpbBgLIAMoCzIXLmRvdGJwZS5BUGFw",
            "ZXJTdGFEZXRhaWwimAEKCURUT1FQYXBlchIRCglxcGFwZXJfaWQYASABKAUS",
            "DwoHc3ViamVjdBgCIAEoCRISCgpzdGFydF90aW1lGAMgASgJEhAKCGVuZF90",
            "aW1lGAQgASgJEhMKC2Rlc2NyaXB0aW9uGAUgASgJEhYKDmNyZWF0ZV91c2Vy",
            "X2lkGAYgASgJEhQKDGFwYXBlcl9jb3VudBgHIAEoBSKSAQoLRFRPUXVlc3Rp",
            "b24SCgoCaWQYASABKAkSDQoFdG9waWMYAiABKAkSEAoIcGFwZXJfaWQYAyAB",
            "KAUSKwoNcXVlc3Rpb25fdHlwZRgEIAEoDjIULmRvdGJwZS5RdWVzdGlvblR5",
            "cGUSEwoLaXRlbV9kZXRhaWwYBSABKAkSFAoMZXh0ZW5kX2lucHV0GAYgASgI",
            "IrQBChVEVE9RUGFwZXJXaXRoUXVlc3Rpb24SEQoJcXBhcGVyX2lkGAEgASgF",
            "Eg8KB3N1YmplY3QYAiABKAkSEgoKc3RhcnRfdGltZRgDIAEoCRIQCghlbmRf",
            "dGltZRgEIAEoCRITCgtkZXNjcmlwdGlvbhgFIAEoCRIUCgxhcGFwZXJfY291",
            "bnQYByABKAUSJgoJcXVlc3Rpb25zGAogAygLMhMuZG90YnBlLkRUT1F1ZXN0",
            "aW9uKjgKDFF1ZXN0aW9uVHlwZRIKCgZTSU5HTEUQABIMCghNVUxUSVBMRRAB",
            "Eg4KClNVQkpFQ1RJVkUQAkJ8SAGqAhBTdXJ2ZXkuUHJvdG9jb2xzgvQYY2Ns",
            "aWVudF9pcCxpZGVudGl0eSx4X3JlcXVlc3RfaWQsZGV2aWNlX2lkLGRldmlj",
            "ZV9vcyxkZXZpY2VfbmFtZSxzcmNfY29kZSxhcHBfdmVyc2lvbixyZXR1cm5f",
            "bWVzc2FnZVAAUAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Tomato.Protobuf.TomatoOptionReflection.Descriptor, global::Survey.Protocols.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Survey.Protocols.QuestionType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.SaveQPaperReq), global::Survey.Protocols.SaveQPaperReq.Parser, new[]{ "ClientIp", "Identity", "XRequestId", "QpaperId", "Subject", "StartTime", "EndTime", "Description", "Questions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.SaveQPaperRsp), global::Survey.Protocols.SaveQPaperRsp.Parser, new[]{ "ReturnMessage", "QpaperId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.QueryQPaperReq), global::Survey.Protocols.QueryQPaperReq.Parser, new[]{ "ClientIp", "Identity", "XRequestId", "Query", "CheckRole", "Page", "Rp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.QPaperListRsp), global::Survey.Protocols.QPaperListRsp.Parser, new[]{ "ReturnMessage", "List", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.GetQPaperReq), global::Survey.Protocols.GetQPaperReq.Parser, new[]{ "ClientIp", "Identity", "XRequestId", "QpaperId", "CheckRole" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.QPaperRsp), global::Survey.Protocols.QPaperRsp.Parser, new[]{ "ReturnMessage", "QpaperId", "Subject", "StartTime", "EndTime", "Description", "CreateUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.QPaperFullRsp), global::Survey.Protocols.QPaperFullRsp.Parser, new[]{ "ReturnMessage", "Qpaper" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.AddAPaperReq), global::Survey.Protocols.AddAPaperReq.Parser, new[]{ "ClientIp", "Identity", "XRequestId", "QpaperId", "Count" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.GetQPaperStaReq), global::Survey.Protocols.GetQPaperStaReq.Parser, new[]{ "ClientIp", "Identity", "XRequestId", "QpaperId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.QPaperStaRsp), global::Survey.Protocols.QPaperStaRsp.Parser, new[]{ "ReturnMessage", "Qpaper", "StaDetail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.DTOQPaper), global::Survey.Protocols.DTOQPaper.Parser, new[]{ "QpaperId", "Subject", "StartTime", "EndTime", "Description", "CreateUserId", "ApaperCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.DTOQuestion), global::Survey.Protocols.DTOQuestion.Parser, new[]{ "Id", "Topic", "PaperId", "QuestionType", "ItemDetail", "ExtendInput" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.DTOQPaperWithQuestion), global::Survey.Protocols.DTOQPaperWithQuestion.Parser, new[]{ "QpaperId", "Subject", "StartTime", "EndTime", "Description", "ApaperCount", "Questions" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum QuestionType {
    /// <summary>
    ///单选
    /// </summary>
    [pbr::OriginalName("SINGLE")] Single = 0,
    /// <summary>
    ///多选
    /// </summary>
    [pbr::OriginalName("MULTIPLE")] Multiple = 1,
    /// <summary>
    ///主观题
    /// </summary>
    [pbr::OriginalName("SUBJECTIVE")] Subjective = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// 保存问卷的请求
  /// </summary>
  public sealed partial class SaveQPaperReq : pb::IMessage<SaveQPaperReq> {
    private static readonly pb::MessageParser<SaveQPaperReq> _parser = new pb::MessageParser<SaveQPaperReq>(() => new SaveQPaperReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaveQPaperReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.QpaperReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveQPaperReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveQPaperReq(SaveQPaperReq other) : this() {
      clientIp_ = other.clientIp_;
      identity_ = other.identity_;
      xRequestId_ = other.xRequestId_;
      qpaperId_ = other.qpaperId_;
      subject_ = other.subject_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      description_ = other.description_;
      questions_ = other.questions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveQPaperReq Clone() {
      return new SaveQPaperReq(this);
    }

    /// <summary>Field number for the "client_ip" field.</summary>
    public const int ClientIpFieldNumber = 1;
    private string clientIp_ = "";
    /// <summary>
    ///用户端IP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientIp {
      get { return clientIp_; }
      set {
        clientIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 2;
    private string identity_ = "";
    /// <summary>
    /// 用户标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Identity {
      get { return identity_; }
      set {
        identity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x_request_id" field.</summary>
    public const int XRequestIdFieldNumber = 3;
    private string xRequestId_ = "";
    /// <summary>
    ///请求的唯一标识，用于服务间传递
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string XRequestId {
      get { return xRequestId_; }
      set {
        xRequestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qpaper_id" field.</summary>
    public const int QpaperIdFieldNumber = 10;
    private int qpaperId_;
    /// <summary>
    /// 问卷ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QpaperId {
      get { return qpaperId_; }
      set {
        qpaperId_ = value;
      }
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 11;
    private string subject_ = "";
    /// <summary>
    /// 问卷标题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subject {
      get { return subject_; }
      set {
        subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 12;
    private string startTime_ = "";
    /// <summary>
    /// 问卷开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 13;
    private string endTime_ = "";
    /// <summary>
    /// 问卷结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 14;
    private string description_ = "";
    /// <summary>
    /// 注释和说明
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "questions" field.</summary>
    public const int QuestionsFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Survey.Protocols.DTOQuestion> _repeated_questions_codec
        = pb::FieldCodec.ForMessage(122, global::Survey.Protocols.DTOQuestion.Parser);
    private readonly pbc::RepeatedField<global::Survey.Protocols.DTOQuestion> questions_ = new pbc::RepeatedField<global::Survey.Protocols.DTOQuestion>();
    /// <summary>
    /// 问题列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Survey.Protocols.DTOQuestion> Questions {
      get { return questions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaveQPaperReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaveQPaperReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientIp != other.ClientIp) return false;
      if (Identity != other.Identity) return false;
      if (XRequestId != other.XRequestId) return false;
      if (QpaperId != other.QpaperId) return false;
      if (Subject != other.Subject) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (Description != other.Description) return false;
      if(!questions_.Equals(other.questions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientIp.Length != 0) hash ^= ClientIp.GetHashCode();
      if (Identity.Length != 0) hash ^= Identity.GetHashCode();
      if (XRequestId.Length != 0) hash ^= XRequestId.GetHashCode();
      if (QpaperId != 0) hash ^= QpaperId.GetHashCode();
      if (Subject.Length != 0) hash ^= Subject.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= questions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientIp.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientIp);
      }
      if (Identity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Identity);
      }
      if (XRequestId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(XRequestId);
      }
      if (QpaperId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(QpaperId);
      }
      if (Subject.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Subject);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(StartTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(EndTime);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Description);
      }
      questions_.WriteTo(output, _repeated_questions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientIp);
      }
      if (Identity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Identity);
      }
      if (XRequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(XRequestId);
      }
      if (QpaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QpaperId);
      }
      if (Subject.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (EndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += questions_.CalculateSize(_repeated_questions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaveQPaperReq other) {
      if (other == null) {
        return;
      }
      if (other.ClientIp.Length != 0) {
        ClientIp = other.ClientIp;
      }
      if (other.Identity.Length != 0) {
        Identity = other.Identity;
      }
      if (other.XRequestId.Length != 0) {
        XRequestId = other.XRequestId;
      }
      if (other.QpaperId != 0) {
        QpaperId = other.QpaperId;
      }
      if (other.Subject.Length != 0) {
        Subject = other.Subject;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      questions_.Add(other.questions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientIp = input.ReadString();
            break;
          }
          case 18: {
            Identity = input.ReadString();
            break;
          }
          case 26: {
            XRequestId = input.ReadString();
            break;
          }
          case 80: {
            QpaperId = input.ReadInt32();
            break;
          }
          case 90: {
            Subject = input.ReadString();
            break;
          }
          case 98: {
            StartTime = input.ReadString();
            break;
          }
          case 106: {
            EndTime = input.ReadString();
            break;
          }
          case 114: {
            Description = input.ReadString();
            break;
          }
          case 122: {
            questions_.AddEntriesFrom(input, _repeated_questions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SaveQPaperRsp : pb::IMessage<SaveQPaperRsp> {
    private static readonly pb::MessageParser<SaveQPaperRsp> _parser = new pb::MessageParser<SaveQPaperRsp>(() => new SaveQPaperRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaveQPaperRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.QpaperReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveQPaperRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveQPaperRsp(SaveQPaperRsp other) : this() {
      returnMessage_ = other.returnMessage_;
      qpaperId_ = other.qpaperId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveQPaperRsp Clone() {
      return new SaveQPaperRsp(this);
    }

    /// <summary>Field number for the "return_message" field.</summary>
    public const int ReturnMessageFieldNumber = 1;
    private string returnMessage_ = "";
    /// <summary>
    ///返回错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReturnMessage {
      get { return returnMessage_; }
      set {
        returnMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qpaper_id" field.</summary>
    public const int QpaperIdFieldNumber = 10;
    private int qpaperId_;
    /// <summary>
    /// 保存后的问卷ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QpaperId {
      get { return qpaperId_; }
      set {
        qpaperId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaveQPaperRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaveQPaperRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnMessage != other.ReturnMessage) return false;
      if (QpaperId != other.QpaperId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnMessage.Length != 0) hash ^= ReturnMessage.GetHashCode();
      if (QpaperId != 0) hash ^= QpaperId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReturnMessage);
      }
      if (QpaperId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(QpaperId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReturnMessage);
      }
      if (QpaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QpaperId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaveQPaperRsp other) {
      if (other == null) {
        return;
      }
      if (other.ReturnMessage.Length != 0) {
        ReturnMessage = other.ReturnMessage;
      }
      if (other.QpaperId != 0) {
        QpaperId = other.QpaperId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReturnMessage = input.ReadString();
            break;
          }
          case 80: {
            QpaperId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 查询问卷的请求
  /// </summary>
  public sealed partial class QueryQPaperReq : pb::IMessage<QueryQPaperReq> {
    private static readonly pb::MessageParser<QueryQPaperReq> _parser = new pb::MessageParser<QueryQPaperReq>(() => new QueryQPaperReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryQPaperReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.QpaperReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryQPaperReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryQPaperReq(QueryQPaperReq other) : this() {
      clientIp_ = other.clientIp_;
      identity_ = other.identity_;
      xRequestId_ = other.xRequestId_;
      query_ = other.query_;
      checkRole_ = other.checkRole_;
      page_ = other.page_;
      rp_ = other.rp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryQPaperReq Clone() {
      return new QueryQPaperReq(this);
    }

    /// <summary>Field number for the "client_ip" field.</summary>
    public const int ClientIpFieldNumber = 1;
    private string clientIp_ = "";
    /// <summary>
    ///用户端IP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientIp {
      get { return clientIp_; }
      set {
        clientIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 2;
    private string identity_ = "";
    /// <summary>
    /// 用户标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Identity {
      get { return identity_; }
      set {
        identity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x_request_id" field.</summary>
    public const int XRequestIdFieldNumber = 3;
    private string xRequestId_ = "";
    /// <summary>
    ///请求的唯一标识，用于服务间传递
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string XRequestId {
      get { return xRequestId_; }
      set {
        xRequestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 10;
    private string query_ = "";
    /// <summary>
    ///过滤标题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "check_role" field.</summary>
    public const int CheckRoleFieldNumber = 11;
    private bool checkRole_;
    /// <summary>
    /// 是否判断用户权限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CheckRole {
      get { return checkRole_; }
      set {
        checkRole_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 12;
    private int page_;
    /// <summary>
    /// 当前页码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "rp" field.</summary>
    public const int RpFieldNumber = 13;
    private int rp_;
    /// <summary>
    ///每页记录数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rp {
      get { return rp_; }
      set {
        rp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryQPaperReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryQPaperReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientIp != other.ClientIp) return false;
      if (Identity != other.Identity) return false;
      if (XRequestId != other.XRequestId) return false;
      if (Query != other.Query) return false;
      if (CheckRole != other.CheckRole) return false;
      if (Page != other.Page) return false;
      if (Rp != other.Rp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientIp.Length != 0) hash ^= ClientIp.GetHashCode();
      if (Identity.Length != 0) hash ^= Identity.GetHashCode();
      if (XRequestId.Length != 0) hash ^= XRequestId.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (CheckRole != false) hash ^= CheckRole.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (Rp != 0) hash ^= Rp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientIp.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientIp);
      }
      if (Identity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Identity);
      }
      if (XRequestId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(XRequestId);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Query);
      }
      if (CheckRole != false) {
        output.WriteRawTag(88);
        output.WriteBool(CheckRole);
      }
      if (Page != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Page);
      }
      if (Rp != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Rp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientIp);
      }
      if (Identity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Identity);
      }
      if (XRequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(XRequestId);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (CheckRole != false) {
        size += 1 + 1;
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
      }
      if (Rp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryQPaperReq other) {
      if (other == null) {
        return;
      }
      if (other.ClientIp.Length != 0) {
        ClientIp = other.ClientIp;
      }
      if (other.Identity.Length != 0) {
        Identity = other.Identity;
      }
      if (other.XRequestId.Length != 0) {
        XRequestId = other.XRequestId;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.CheckRole != false) {
        CheckRole = other.CheckRole;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.Rp != 0) {
        Rp = other.Rp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientIp = input.ReadString();
            break;
          }
          case 18: {
            Identity = input.ReadString();
            break;
          }
          case 26: {
            XRequestId = input.ReadString();
            break;
          }
          case 82: {
            Query = input.ReadString();
            break;
          }
          case 88: {
            CheckRole = input.ReadBool();
            break;
          }
          case 96: {
            Page = input.ReadInt32();
            break;
          }
          case 104: {
            Rp = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 查询问卷的列表
  /// </summary>
  public sealed partial class QPaperListRsp : pb::IMessage<QPaperListRsp> {
    private static readonly pb::MessageParser<QPaperListRsp> _parser = new pb::MessageParser<QPaperListRsp>(() => new QPaperListRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QPaperListRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.QpaperReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QPaperListRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QPaperListRsp(QPaperListRsp other) : this() {
      returnMessage_ = other.returnMessage_;
      list_ = other.list_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QPaperListRsp Clone() {
      return new QPaperListRsp(this);
    }

    /// <summary>Field number for the "return_message" field.</summary>
    public const int ReturnMessageFieldNumber = 1;
    private string returnMessage_ = "";
    /// <summary>
    ///返回错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReturnMessage {
      get { return returnMessage_; }
      set {
        returnMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Survey.Protocols.DTOQPaper> _repeated_list_codec
        = pb::FieldCodec.ForMessage(82, global::Survey.Protocols.DTOQPaper.Parser);
    private readonly pbc::RepeatedField<global::Survey.Protocols.DTOQPaper> list_ = new pbc::RepeatedField<global::Survey.Protocols.DTOQPaper>();
    /// <summary>
    ///列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Survey.Protocols.DTOQPaper> List {
      get { return list_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 11;
    private int total_;
    /// <summary>
    /// 记录数，只在page_index = 1 才返回
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QPaperListRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QPaperListRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnMessage != other.ReturnMessage) return false;
      if(!list_.Equals(other.list_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnMessage.Length != 0) hash ^= ReturnMessage.GetHashCode();
      hash ^= list_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReturnMessage);
      }
      list_.WriteTo(output, _repeated_list_codec);
      if (Total != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReturnMessage);
      }
      size += list_.CalculateSize(_repeated_list_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QPaperListRsp other) {
      if (other == null) {
        return;
      }
      if (other.ReturnMessage.Length != 0) {
        ReturnMessage = other.ReturnMessage;
      }
      list_.Add(other.list_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReturnMessage = input.ReadString();
            break;
          }
          case 82: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
          case 88: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 获取单个问卷的请求
  /// </summary>
  public sealed partial class GetQPaperReq : pb::IMessage<GetQPaperReq> {
    private static readonly pb::MessageParser<GetQPaperReq> _parser = new pb::MessageParser<GetQPaperReq>(() => new GetQPaperReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetQPaperReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.QpaperReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQPaperReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQPaperReq(GetQPaperReq other) : this() {
      clientIp_ = other.clientIp_;
      identity_ = other.identity_;
      xRequestId_ = other.xRequestId_;
      qpaperId_ = other.qpaperId_;
      checkRole_ = other.checkRole_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQPaperReq Clone() {
      return new GetQPaperReq(this);
    }

    /// <summary>Field number for the "client_ip" field.</summary>
    public const int ClientIpFieldNumber = 1;
    private string clientIp_ = "";
    /// <summary>
    ///用户端IP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientIp {
      get { return clientIp_; }
      set {
        clientIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 2;
    private string identity_ = "";
    /// <summary>
    /// 用户标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Identity {
      get { return identity_; }
      set {
        identity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x_request_id" field.</summary>
    public const int XRequestIdFieldNumber = 3;
    private string xRequestId_ = "";
    /// <summary>
    ///请求的唯一标识，用于服务间传递
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string XRequestId {
      get { return xRequestId_; }
      set {
        xRequestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qpaper_id" field.</summary>
    public const int QpaperIdFieldNumber = 10;
    private int qpaperId_;
    /// <summary>
    ///问卷ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QpaperId {
      get { return qpaperId_; }
      set {
        qpaperId_ = value;
      }
    }

    /// <summary>Field number for the "check_role" field.</summary>
    public const int CheckRoleFieldNumber = 11;
    private bool checkRole_;
    /// <summary>
    /// 是否判断用户权限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CheckRole {
      get { return checkRole_; }
      set {
        checkRole_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetQPaperReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetQPaperReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientIp != other.ClientIp) return false;
      if (Identity != other.Identity) return false;
      if (XRequestId != other.XRequestId) return false;
      if (QpaperId != other.QpaperId) return false;
      if (CheckRole != other.CheckRole) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientIp.Length != 0) hash ^= ClientIp.GetHashCode();
      if (Identity.Length != 0) hash ^= Identity.GetHashCode();
      if (XRequestId.Length != 0) hash ^= XRequestId.GetHashCode();
      if (QpaperId != 0) hash ^= QpaperId.GetHashCode();
      if (CheckRole != false) hash ^= CheckRole.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientIp.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientIp);
      }
      if (Identity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Identity);
      }
      if (XRequestId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(XRequestId);
      }
      if (QpaperId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(QpaperId);
      }
      if (CheckRole != false) {
        output.WriteRawTag(88);
        output.WriteBool(CheckRole);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientIp);
      }
      if (Identity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Identity);
      }
      if (XRequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(XRequestId);
      }
      if (QpaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QpaperId);
      }
      if (CheckRole != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetQPaperReq other) {
      if (other == null) {
        return;
      }
      if (other.ClientIp.Length != 0) {
        ClientIp = other.ClientIp;
      }
      if (other.Identity.Length != 0) {
        Identity = other.Identity;
      }
      if (other.XRequestId.Length != 0) {
        XRequestId = other.XRequestId;
      }
      if (other.QpaperId != 0) {
        QpaperId = other.QpaperId;
      }
      if (other.CheckRole != false) {
        CheckRole = other.CheckRole;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientIp = input.ReadString();
            break;
          }
          case 18: {
            Identity = input.ReadString();
            break;
          }
          case 26: {
            XRequestId = input.ReadString();
            break;
          }
          case 80: {
            QpaperId = input.ReadInt32();
            break;
          }
          case 88: {
            CheckRole = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 包括单个问卷信息的响应
  /// </summary>
  public sealed partial class QPaperRsp : pb::IMessage<QPaperRsp> {
    private static readonly pb::MessageParser<QPaperRsp> _parser = new pb::MessageParser<QPaperRsp>(() => new QPaperRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QPaperRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.QpaperReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QPaperRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QPaperRsp(QPaperRsp other) : this() {
      returnMessage_ = other.returnMessage_;
      qpaperId_ = other.qpaperId_;
      subject_ = other.subject_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      description_ = other.description_;
      createUserId_ = other.createUserId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QPaperRsp Clone() {
      return new QPaperRsp(this);
    }

    /// <summary>Field number for the "return_message" field.</summary>
    public const int ReturnMessageFieldNumber = 1;
    private string returnMessage_ = "";
    /// <summary>
    ///返回错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReturnMessage {
      get { return returnMessage_; }
      set {
        returnMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qpaper_id" field.</summary>
    public const int QpaperIdFieldNumber = 11;
    private int qpaperId_;
    /// <summary>
    /// 问卷ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QpaperId {
      get { return qpaperId_; }
      set {
        qpaperId_ = value;
      }
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 12;
    private string subject_ = "";
    /// <summary>
    /// 问卷标题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subject {
      get { return subject_; }
      set {
        subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 13;
    private string startTime_ = "";
    /// <summary>
    /// 问卷开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 14;
    private string endTime_ = "";
    /// <summary>
    /// 问卷结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 15;
    private string description_ = "";
    /// <summary>
    /// 注释和说明
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_user_id" field.</summary>
    public const int CreateUserIdFieldNumber = 16;
    private string createUserId_ = "";
    /// <summary>
    ///注释
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreateUserId {
      get { return createUserId_; }
      set {
        createUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QPaperRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QPaperRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnMessage != other.ReturnMessage) return false;
      if (QpaperId != other.QpaperId) return false;
      if (Subject != other.Subject) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (Description != other.Description) return false;
      if (CreateUserId != other.CreateUserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnMessage.Length != 0) hash ^= ReturnMessage.GetHashCode();
      if (QpaperId != 0) hash ^= QpaperId.GetHashCode();
      if (Subject.Length != 0) hash ^= Subject.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (CreateUserId.Length != 0) hash ^= CreateUserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReturnMessage);
      }
      if (QpaperId != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(QpaperId);
      }
      if (Subject.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Subject);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(StartTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(EndTime);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Description);
      }
      if (CreateUserId.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CreateUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReturnMessage);
      }
      if (QpaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QpaperId);
      }
      if (Subject.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (EndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (CreateUserId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreateUserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QPaperRsp other) {
      if (other == null) {
        return;
      }
      if (other.ReturnMessage.Length != 0) {
        ReturnMessage = other.ReturnMessage;
      }
      if (other.QpaperId != 0) {
        QpaperId = other.QpaperId;
      }
      if (other.Subject.Length != 0) {
        Subject = other.Subject;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.CreateUserId.Length != 0) {
        CreateUserId = other.CreateUserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReturnMessage = input.ReadString();
            break;
          }
          case 88: {
            QpaperId = input.ReadInt32();
            break;
          }
          case 98: {
            Subject = input.ReadString();
            break;
          }
          case 106: {
            StartTime = input.ReadString();
            break;
          }
          case 114: {
            EndTime = input.ReadString();
            break;
          }
          case 122: {
            Description = input.ReadString();
            break;
          }
          case 130: {
            CreateUserId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QPaperFullRsp : pb::IMessage<QPaperFullRsp> {
    private static readonly pb::MessageParser<QPaperFullRsp> _parser = new pb::MessageParser<QPaperFullRsp>(() => new QPaperFullRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QPaperFullRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.QpaperReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QPaperFullRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QPaperFullRsp(QPaperFullRsp other) : this() {
      returnMessage_ = other.returnMessage_;
      Qpaper = other.qpaper_ != null ? other.Qpaper.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QPaperFullRsp Clone() {
      return new QPaperFullRsp(this);
    }

    /// <summary>Field number for the "return_message" field.</summary>
    public const int ReturnMessageFieldNumber = 1;
    private string returnMessage_ = "";
    /// <summary>
    ///返回错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReturnMessage {
      get { return returnMessage_; }
      set {
        returnMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qpaper" field.</summary>
    public const int QpaperFieldNumber = 10;
    private global::Survey.Protocols.DTOQPaperWithQuestion qpaper_;
    /// <summary>
    ///问卷
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Survey.Protocols.DTOQPaperWithQuestion Qpaper {
      get { return qpaper_; }
      set {
        qpaper_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QPaperFullRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QPaperFullRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnMessage != other.ReturnMessage) return false;
      if (!object.Equals(Qpaper, other.Qpaper)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnMessage.Length != 0) hash ^= ReturnMessage.GetHashCode();
      if (qpaper_ != null) hash ^= Qpaper.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReturnMessage);
      }
      if (qpaper_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Qpaper);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReturnMessage);
      }
      if (qpaper_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Qpaper);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QPaperFullRsp other) {
      if (other == null) {
        return;
      }
      if (other.ReturnMessage.Length != 0) {
        ReturnMessage = other.ReturnMessage;
      }
      if (other.qpaper_ != null) {
        if (qpaper_ == null) {
          qpaper_ = new global::Survey.Protocols.DTOQPaperWithQuestion();
        }
        Qpaper.MergeFrom(other.Qpaper);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReturnMessage = input.ReadString();
            break;
          }
          case 82: {
            if (qpaper_ == null) {
              qpaper_ = new global::Survey.Protocols.DTOQPaperWithQuestion();
            }
            input.ReadMessage(qpaper_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddAPaperReq : pb::IMessage<AddAPaperReq> {
    private static readonly pb::MessageParser<AddAPaperReq> _parser = new pb::MessageParser<AddAPaperReq>(() => new AddAPaperReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddAPaperReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.QpaperReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAPaperReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAPaperReq(AddAPaperReq other) : this() {
      clientIp_ = other.clientIp_;
      identity_ = other.identity_;
      xRequestId_ = other.xRequestId_;
      qpaperId_ = other.qpaperId_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAPaperReq Clone() {
      return new AddAPaperReq(this);
    }

    /// <summary>Field number for the "client_ip" field.</summary>
    public const int ClientIpFieldNumber = 1;
    private string clientIp_ = "";
    /// <summary>
    ///用户端IP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientIp {
      get { return clientIp_; }
      set {
        clientIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 2;
    private string identity_ = "";
    /// <summary>
    /// 用户标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Identity {
      get { return identity_; }
      set {
        identity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x_request_id" field.</summary>
    public const int XRequestIdFieldNumber = 3;
    private string xRequestId_ = "";
    /// <summary>
    ///请求的唯一标识，用于服务间传递
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string XRequestId {
      get { return xRequestId_; }
      set {
        xRequestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qpaper_id" field.</summary>
    public const int QpaperIdFieldNumber = 10;
    private int qpaperId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QpaperId {
      get { return qpaperId_; }
      set {
        qpaperId_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 11;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddAPaperReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddAPaperReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientIp != other.ClientIp) return false;
      if (Identity != other.Identity) return false;
      if (XRequestId != other.XRequestId) return false;
      if (QpaperId != other.QpaperId) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientIp.Length != 0) hash ^= ClientIp.GetHashCode();
      if (Identity.Length != 0) hash ^= Identity.GetHashCode();
      if (XRequestId.Length != 0) hash ^= XRequestId.GetHashCode();
      if (QpaperId != 0) hash ^= QpaperId.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientIp.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientIp);
      }
      if (Identity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Identity);
      }
      if (XRequestId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(XRequestId);
      }
      if (QpaperId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(QpaperId);
      }
      if (Count != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientIp);
      }
      if (Identity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Identity);
      }
      if (XRequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(XRequestId);
      }
      if (QpaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QpaperId);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddAPaperReq other) {
      if (other == null) {
        return;
      }
      if (other.ClientIp.Length != 0) {
        ClientIp = other.ClientIp;
      }
      if (other.Identity.Length != 0) {
        Identity = other.Identity;
      }
      if (other.XRequestId.Length != 0) {
        XRequestId = other.XRequestId;
      }
      if (other.QpaperId != 0) {
        QpaperId = other.QpaperId;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientIp = input.ReadString();
            break;
          }
          case 18: {
            Identity = input.ReadString();
            break;
          }
          case 26: {
            XRequestId = input.ReadString();
            break;
          }
          case 80: {
            QpaperId = input.ReadInt32();
            break;
          }
          case 88: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetQPaperStaReq : pb::IMessage<GetQPaperStaReq> {
    private static readonly pb::MessageParser<GetQPaperStaReq> _parser = new pb::MessageParser<GetQPaperStaReq>(() => new GetQPaperStaReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetQPaperStaReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.QpaperReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQPaperStaReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQPaperStaReq(GetQPaperStaReq other) : this() {
      clientIp_ = other.clientIp_;
      identity_ = other.identity_;
      xRequestId_ = other.xRequestId_;
      qpaperId_ = other.qpaperId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQPaperStaReq Clone() {
      return new GetQPaperStaReq(this);
    }

    /// <summary>Field number for the "client_ip" field.</summary>
    public const int ClientIpFieldNumber = 1;
    private string clientIp_ = "";
    /// <summary>
    ///用户端IP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientIp {
      get { return clientIp_; }
      set {
        clientIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 2;
    private string identity_ = "";
    /// <summary>
    /// 用户标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Identity {
      get { return identity_; }
      set {
        identity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x_request_id" field.</summary>
    public const int XRequestIdFieldNumber = 3;
    private string xRequestId_ = "";
    /// <summary>
    ///请求的唯一标识，用于服务间传递
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string XRequestId {
      get { return xRequestId_; }
      set {
        xRequestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qpaper_id" field.</summary>
    public const int QpaperIdFieldNumber = 10;
    private int qpaperId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QpaperId {
      get { return qpaperId_; }
      set {
        qpaperId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetQPaperStaReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetQPaperStaReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientIp != other.ClientIp) return false;
      if (Identity != other.Identity) return false;
      if (XRequestId != other.XRequestId) return false;
      if (QpaperId != other.QpaperId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientIp.Length != 0) hash ^= ClientIp.GetHashCode();
      if (Identity.Length != 0) hash ^= Identity.GetHashCode();
      if (XRequestId.Length != 0) hash ^= XRequestId.GetHashCode();
      if (QpaperId != 0) hash ^= QpaperId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientIp.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientIp);
      }
      if (Identity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Identity);
      }
      if (XRequestId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(XRequestId);
      }
      if (QpaperId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(QpaperId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientIp);
      }
      if (Identity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Identity);
      }
      if (XRequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(XRequestId);
      }
      if (QpaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QpaperId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetQPaperStaReq other) {
      if (other == null) {
        return;
      }
      if (other.ClientIp.Length != 0) {
        ClientIp = other.ClientIp;
      }
      if (other.Identity.Length != 0) {
        Identity = other.Identity;
      }
      if (other.XRequestId.Length != 0) {
        XRequestId = other.XRequestId;
      }
      if (other.QpaperId != 0) {
        QpaperId = other.QpaperId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientIp = input.ReadString();
            break;
          }
          case 18: {
            Identity = input.ReadString();
            break;
          }
          case 26: {
            XRequestId = input.ReadString();
            break;
          }
          case 80: {
            QpaperId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QPaperStaRsp : pb::IMessage<QPaperStaRsp> {
    private static readonly pb::MessageParser<QPaperStaRsp> _parser = new pb::MessageParser<QPaperStaRsp>(() => new QPaperStaRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QPaperStaRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.QpaperReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QPaperStaRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QPaperStaRsp(QPaperStaRsp other) : this() {
      returnMessage_ = other.returnMessage_;
      Qpaper = other.qpaper_ != null ? other.Qpaper.Clone() : null;
      staDetail_ = other.staDetail_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QPaperStaRsp Clone() {
      return new QPaperStaRsp(this);
    }

    /// <summary>Field number for the "return_message" field.</summary>
    public const int ReturnMessageFieldNumber = 1;
    private string returnMessage_ = "";
    /// <summary>
    ///返回错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReturnMessage {
      get { return returnMessage_; }
      set {
        returnMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qpaper" field.</summary>
    public const int QpaperFieldNumber = 10;
    private global::Survey.Protocols.DTOQPaperWithQuestion qpaper_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Survey.Protocols.DTOQPaperWithQuestion Qpaper {
      get { return qpaper_; }
      set {
        qpaper_ = value;
      }
    }

    /// <summary>Field number for the "sta_detail" field.</summary>
    public const int StaDetailFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Survey.Protocols.APaperStaDetail> _repeated_staDetail_codec
        = pb::FieldCodec.ForMessage(90, global::Survey.Protocols.APaperStaDetail.Parser);
    private readonly pbc::RepeatedField<global::Survey.Protocols.APaperStaDetail> staDetail_ = new pbc::RepeatedField<global::Survey.Protocols.APaperStaDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Survey.Protocols.APaperStaDetail> StaDetail {
      get { return staDetail_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QPaperStaRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QPaperStaRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnMessage != other.ReturnMessage) return false;
      if (!object.Equals(Qpaper, other.Qpaper)) return false;
      if(!staDetail_.Equals(other.staDetail_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnMessage.Length != 0) hash ^= ReturnMessage.GetHashCode();
      if (qpaper_ != null) hash ^= Qpaper.GetHashCode();
      hash ^= staDetail_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReturnMessage);
      }
      if (qpaper_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Qpaper);
      }
      staDetail_.WriteTo(output, _repeated_staDetail_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReturnMessage);
      }
      if (qpaper_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Qpaper);
      }
      size += staDetail_.CalculateSize(_repeated_staDetail_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QPaperStaRsp other) {
      if (other == null) {
        return;
      }
      if (other.ReturnMessage.Length != 0) {
        ReturnMessage = other.ReturnMessage;
      }
      if (other.qpaper_ != null) {
        if (qpaper_ == null) {
          qpaper_ = new global::Survey.Protocols.DTOQPaperWithQuestion();
        }
        Qpaper.MergeFrom(other.Qpaper);
      }
      staDetail_.Add(other.staDetail_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReturnMessage = input.ReadString();
            break;
          }
          case 82: {
            if (qpaper_ == null) {
              qpaper_ = new global::Survey.Protocols.DTOQPaperWithQuestion();
            }
            input.ReadMessage(qpaper_);
            break;
          }
          case 90: {
            staDetail_.AddEntriesFrom(input, _repeated_staDetail_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///简化的QPaper 消息
  /// </summary>
  public sealed partial class DTOQPaper : pb::IMessage<DTOQPaper> {
    private static readonly pb::MessageParser<DTOQPaper> _parser = new pb::MessageParser<DTOQPaper>(() => new DTOQPaper());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DTOQPaper> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.QpaperReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOQPaper() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOQPaper(DTOQPaper other) : this() {
      qpaperId_ = other.qpaperId_;
      subject_ = other.subject_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      description_ = other.description_;
      createUserId_ = other.createUserId_;
      apaperCount_ = other.apaperCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOQPaper Clone() {
      return new DTOQPaper(this);
    }

    /// <summary>Field number for the "qpaper_id" field.</summary>
    public const int QpaperIdFieldNumber = 1;
    private int qpaperId_;
    /// <summary>
    /// 问卷ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QpaperId {
      get { return qpaperId_; }
      set {
        qpaperId_ = value;
      }
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 2;
    private string subject_ = "";
    /// <summary>
    /// 问卷标题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subject {
      get { return subject_; }
      set {
        subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 3;
    private string startTime_ = "";
    /// <summary>
    /// 问卷开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 4;
    private string endTime_ = "";
    /// <summary>
    /// 问卷结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    /// <summary>
    /// 注释和说明
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_user_id" field.</summary>
    public const int CreateUserIdFieldNumber = 6;
    private string createUserId_ = "";
    /// <summary>
    ///用户
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreateUserId {
      get { return createUserId_; }
      set {
        createUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "apaper_count" field.</summary>
    public const int ApaperCountFieldNumber = 7;
    private int apaperCount_;
    /// <summary>
    ///答卷数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApaperCount {
      get { return apaperCount_; }
      set {
        apaperCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DTOQPaper);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DTOQPaper other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QpaperId != other.QpaperId) return false;
      if (Subject != other.Subject) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (Description != other.Description) return false;
      if (CreateUserId != other.CreateUserId) return false;
      if (ApaperCount != other.ApaperCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QpaperId != 0) hash ^= QpaperId.GetHashCode();
      if (Subject.Length != 0) hash ^= Subject.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (CreateUserId.Length != 0) hash ^= CreateUserId.GetHashCode();
      if (ApaperCount != 0) hash ^= ApaperCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QpaperId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(QpaperId);
      }
      if (Subject.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Subject);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StartTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EndTime);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (CreateUserId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreateUserId);
      }
      if (ApaperCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ApaperCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QpaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QpaperId);
      }
      if (Subject.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (EndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (CreateUserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreateUserId);
      }
      if (ApaperCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApaperCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DTOQPaper other) {
      if (other == null) {
        return;
      }
      if (other.QpaperId != 0) {
        QpaperId = other.QpaperId;
      }
      if (other.Subject.Length != 0) {
        Subject = other.Subject;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.CreateUserId.Length != 0) {
        CreateUserId = other.CreateUserId;
      }
      if (other.ApaperCount != 0) {
        ApaperCount = other.ApaperCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QpaperId = input.ReadInt32();
            break;
          }
          case 18: {
            Subject = input.ReadString();
            break;
          }
          case 26: {
            StartTime = input.ReadString();
            break;
          }
          case 34: {
            EndTime = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            CreateUserId = input.ReadString();
            break;
          }
          case 56: {
            ApaperCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DTOQuestion : pb::IMessage<DTOQuestion> {
    private static readonly pb::MessageParser<DTOQuestion> _parser = new pb::MessageParser<DTOQuestion>(() => new DTOQuestion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DTOQuestion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.QpaperReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOQuestion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOQuestion(DTOQuestion other) : this() {
      id_ = other.id_;
      topic_ = other.topic_;
      paperId_ = other.paperId_;
      questionType_ = other.questionType_;
      itemDetail_ = other.itemDetail_;
      extendInput_ = other.extendInput_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOQuestion Clone() {
      return new DTOQuestion(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///问题ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 2;
    private string topic_ = "";
    /// <summary>
    ///标题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "paper_id" field.</summary>
    public const int PaperIdFieldNumber = 3;
    private int paperId_;
    /// <summary>
    ///问卷ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PaperId {
      get { return paperId_; }
      set {
        paperId_ = value;
      }
    }

    /// <summary>Field number for the "question_type" field.</summary>
    public const int QuestionTypeFieldNumber = 4;
    private global::Survey.Protocols.QuestionType questionType_ = 0;
    /// <summary>
    ///问题类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Survey.Protocols.QuestionType QuestionType {
      get { return questionType_; }
      set {
        questionType_ = value;
      }
    }

    /// <summary>Field number for the "item_detail" field.</summary>
    public const int ItemDetailFieldNumber = 5;
    private string itemDetail_ = "";
    /// <summary>
    ///问题详情
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ItemDetail {
      get { return itemDetail_; }
      set {
        itemDetail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extend_input" field.</summary>
    public const int ExtendInputFieldNumber = 6;
    private bool extendInput_;
    /// <summary>
    ///是否自定义输入，只有在单选题 有效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ExtendInput {
      get { return extendInput_; }
      set {
        extendInput_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DTOQuestion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DTOQuestion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Topic != other.Topic) return false;
      if (PaperId != other.PaperId) return false;
      if (QuestionType != other.QuestionType) return false;
      if (ItemDetail != other.ItemDetail) return false;
      if (ExtendInput != other.ExtendInput) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (PaperId != 0) hash ^= PaperId.GetHashCode();
      if (QuestionType != 0) hash ^= QuestionType.GetHashCode();
      if (ItemDetail.Length != 0) hash ^= ItemDetail.GetHashCode();
      if (ExtendInput != false) hash ^= ExtendInput.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Topic.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Topic);
      }
      if (PaperId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PaperId);
      }
      if (QuestionType != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) QuestionType);
      }
      if (ItemDetail.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ItemDetail);
      }
      if (ExtendInput != false) {
        output.WriteRawTag(48);
        output.WriteBool(ExtendInput);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (PaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PaperId);
      }
      if (QuestionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QuestionType);
      }
      if (ItemDetail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemDetail);
      }
      if (ExtendInput != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DTOQuestion other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      if (other.PaperId != 0) {
        PaperId = other.PaperId;
      }
      if (other.QuestionType != 0) {
        QuestionType = other.QuestionType;
      }
      if (other.ItemDetail.Length != 0) {
        ItemDetail = other.ItemDetail;
      }
      if (other.ExtendInput != false) {
        ExtendInput = other.ExtendInput;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Topic = input.ReadString();
            break;
          }
          case 24: {
            PaperId = input.ReadInt32();
            break;
          }
          case 32: {
            questionType_ = (global::Survey.Protocols.QuestionType) input.ReadEnum();
            break;
          }
          case 42: {
            ItemDetail = input.ReadString();
            break;
          }
          case 48: {
            ExtendInput = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DTOQPaperWithQuestion : pb::IMessage<DTOQPaperWithQuestion> {
    private static readonly pb::MessageParser<DTOQPaperWithQuestion> _parser = new pb::MessageParser<DTOQPaperWithQuestion>(() => new DTOQPaperWithQuestion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DTOQPaperWithQuestion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.QpaperReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOQPaperWithQuestion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOQPaperWithQuestion(DTOQPaperWithQuestion other) : this() {
      qpaperId_ = other.qpaperId_;
      subject_ = other.subject_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      description_ = other.description_;
      apaperCount_ = other.apaperCount_;
      questions_ = other.questions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOQPaperWithQuestion Clone() {
      return new DTOQPaperWithQuestion(this);
    }

    /// <summary>Field number for the "qpaper_id" field.</summary>
    public const int QpaperIdFieldNumber = 1;
    private int qpaperId_;
    /// <summary>
    /// 问卷ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QpaperId {
      get { return qpaperId_; }
      set {
        qpaperId_ = value;
      }
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 2;
    private string subject_ = "";
    /// <summary>
    /// 问卷标题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subject {
      get { return subject_; }
      set {
        subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 3;
    private string startTime_ = "";
    /// <summary>
    /// 问卷开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 4;
    private string endTime_ = "";
    /// <summary>
    /// 问卷结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    /// <summary>
    /// 注释和说明
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "apaper_count" field.</summary>
    public const int ApaperCountFieldNumber = 7;
    private int apaperCount_;
    /// <summary>
    ///答卷数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApaperCount {
      get { return apaperCount_; }
      set {
        apaperCount_ = value;
      }
    }

    /// <summary>Field number for the "questions" field.</summary>
    public const int QuestionsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Survey.Protocols.DTOQuestion> _repeated_questions_codec
        = pb::FieldCodec.ForMessage(82, global::Survey.Protocols.DTOQuestion.Parser);
    private readonly pbc::RepeatedField<global::Survey.Protocols.DTOQuestion> questions_ = new pbc::RepeatedField<global::Survey.Protocols.DTOQuestion>();
    /// <summary>
    /// 问题列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Survey.Protocols.DTOQuestion> Questions {
      get { return questions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DTOQPaperWithQuestion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DTOQPaperWithQuestion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QpaperId != other.QpaperId) return false;
      if (Subject != other.Subject) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (Description != other.Description) return false;
      if (ApaperCount != other.ApaperCount) return false;
      if(!questions_.Equals(other.questions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QpaperId != 0) hash ^= QpaperId.GetHashCode();
      if (Subject.Length != 0) hash ^= Subject.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (ApaperCount != 0) hash ^= ApaperCount.GetHashCode();
      hash ^= questions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QpaperId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(QpaperId);
      }
      if (Subject.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Subject);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StartTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EndTime);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (ApaperCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ApaperCount);
      }
      questions_.WriteTo(output, _repeated_questions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QpaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QpaperId);
      }
      if (Subject.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (EndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (ApaperCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApaperCount);
      }
      size += questions_.CalculateSize(_repeated_questions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DTOQPaperWithQuestion other) {
      if (other == null) {
        return;
      }
      if (other.QpaperId != 0) {
        QpaperId = other.QpaperId;
      }
      if (other.Subject.Length != 0) {
        Subject = other.Subject;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.ApaperCount != 0) {
        ApaperCount = other.ApaperCount;
      }
      questions_.Add(other.questions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QpaperId = input.ReadInt32();
            break;
          }
          case 18: {
            Subject = input.ReadString();
            break;
          }
          case 26: {
            StartTime = input.ReadString();
            break;
          }
          case 34: {
            EndTime = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 56: {
            ApaperCount = input.ReadInt32();
            break;
          }
          case 82: {
            questions_.AddEntriesFrom(input, _repeated_questions_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
