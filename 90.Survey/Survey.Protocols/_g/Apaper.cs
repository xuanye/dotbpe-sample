// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: message/apaper.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Survey.Protocols {

  /// <summary>Holder for reflection information generated from message/apaper.proto</summary>
  public static partial class ApaperReflection {

    #region Descriptor
    /// <summary>File descriptor for message/apaper.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ApaperReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRtZXNzYWdlL2FwYXBlci5wcm90bxIGZG90YnBlGhNkb3RicGVfb3B0aW9u",
            "LnByb3RvGhRtZXNzYWdlL2NvbW1vbi5wcm90bxoUbWVzc2FnZS9xcGFwZXIu",
            "cHJvdG8iogEKDVNhdmVBUGFwZXJSZXESEQoJY2xpZW50X2lwGAEgASgJEhAK",
            "CGlkZW50aXR5GAIgASgJEhQKDHhfcmVxdWVzdF9pZBgDIAEoCRIRCglxcGFw",
            "ZXJfaWQYDCABKAUSDwoHdXNlcl9pZBgNIAEoCRIOCgZyZW1hcmsYDyABKAkS",
            "IgoHYW5zd2VycxgQIAMoCzIRLmRvdGJwZS5EVE9BbnN3ZXIiOgoNU2F2ZUFQ",
            "YXBlclJzcBIWCg5yZXR1cm5fbWVzc2FnZRgBIAEoCRIRCglhcGFwZXJfaWQY",
            "AyABKAUimwEKDlF1ZXJ5QVBhcGVyUmVxEhEKCWNsaWVudF9pcBgBIAEoCRIQ",
            "CghpZGVudGl0eRgCIAEoCRIUCgx4X3JlcXVlc3RfaWQYAyABKAkSDQoFcXRl",
            "eHQYCyABKAkSEQoJcXBhcGVyX2lkGAwgASgFEgwKBHBhZ2UYDSABKAUSCgoC",
            "cnAYDiABKAUSEgoKY2hlY2tfcm9sZRgPIAEoCCJXCg1BUGFwZXJMaXN0UnNw",
            "EhYKDnJldHVybl9tZXNzYWdlGAEgASgJEh8KBGxpc3QYCyADKAsyES5kb3Ri",
            "cGUuRFRPQVBhcGVyEg0KBXRvdGFsGA8gASgFIm8KDEdldEFQYXBlclJlcRIR",
            "CgljbGllbnRfaXAYASABKAkSEAoIaWRlbnRpdHkYAiABKAkSFAoMeF9yZXF1",
            "ZXN0X2lkGAMgASgJEhAKCHBhcGVyX2lkGAsgASgFEhIKCmNoZWNrX3JvbGUY",
            "DCABKAgigAEKCUFQYXBlclJzcBIWCg5yZXR1cm5fbWVzc2FnZRgBIAEoCRIs",
            "CgZhcGFwZXIYCyABKAsyHC5kb3RicGUuRFRPQVBhcGVyV2l0aEFuc3dlcnMS",
            "LQoGcXBhcGVyGAwgASgLMh0uZG90YnBlLkRUT1FQYXBlcldpdGhRdWVzdGlv",
            "biJlChVHZXRBUGFwZXJTdGFEZXRhaWxSZXESEQoJY2xpZW50X2lwGAEgASgJ",
            "EhAKCGlkZW50aXR5GAIgASgJEhQKDHhfcmVxdWVzdF9pZBgDIAEoCRIRCglx",
            "cGFwZXJfaWQYCyABKAUiWQoSQVBhcGVyU3RhRGV0YWlsUnNwEhYKDnJldHVy",
            "bl9tZXNzYWdlGAEgASgJEisKCnN0YV9kZXRhaWwYCiADKAsyFy5kb3RicGUu",
            "QVBhcGVyU3RhRGV0YWlsIpcBCglEVE9BUGFwZXISEQoJYXBhcGVyX2lkGAEg",
            "ASgFEhEKCXFwYXBlcl9pZBgCIAEoBRIWCg5xcGFwZXJfc3ViamVjdBgDIAEo",
            "CRIWCg5xcGFwZXJfdXNlcl9pZBgEIAEoCRIPCgd1c2VyX2lkGAUgASgJEhMK",
            "C2NyZWF0ZV90aW1lGAYgASgJEg4KBnJlbWFyaxgHIAEoCSKWAQoURFRPQVBh",
            "cGVyV2l0aEFuc3dlcnMSEQoJYXBhcGVyX2lkGAEgASgFEhEKCXFwYXBlcl9p",
            "ZBgCIAEoBRIPCgd1c2VyX2lkGAUgASgJEhMKC2NyZWF0ZV90aW1lGAYgASgJ",
            "Eg4KBnJlbWFyaxgHIAEoCRIiCgdhbnN3ZXJzGAogAygLMhEuZG90YnBlLkRU",
            "T0Fuc3dlciJ7CglEVE9BbnN3ZXISEQoJYW5zd2VyX2lkGAEgASgJEhEKCWFw",
            "YXBlcl9pZBgCIAEoBRITCgtxdWVzdGlvbl9pZBgDIAEoCRIYChBvYmplY3Rp",
            "dmVfYW5zd2VyGAQgASgFEhkKEXN1YmplY3RpdmVfYW5zd2VyGAUgASgJQnxI",
            "AaoCEFN1cnZleS5Qcm90b2NvbHOC9BhjY2xpZW50X2lwLGlkZW50aXR5LHhf",
            "cmVxdWVzdF9pZCxkZXZpY2VfaWQsZGV2aWNlX29zLGRldmljZV9uYW1lLHNy",
            "Y19jb2RlLGFwcF92ZXJzaW9uLHJldHVybl9tZXNzYWdlUABQAVACYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Tomato.Protobuf.TomatoOptionReflection.Descriptor, global::Survey.Protocols.CommonReflection.Descriptor, global::Survey.Protocols.QpaperReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.SaveAPaperReq), global::Survey.Protocols.SaveAPaperReq.Parser, new[]{ "ClientIp", "Identity", "XRequestId", "QpaperId", "UserId", "Remark", "Answers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.SaveAPaperRsp), global::Survey.Protocols.SaveAPaperRsp.Parser, new[]{ "ReturnMessage", "ApaperId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.QueryAPaperReq), global::Survey.Protocols.QueryAPaperReq.Parser, new[]{ "ClientIp", "Identity", "XRequestId", "Qtext", "QpaperId", "Page", "Rp", "CheckRole" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.APaperListRsp), global::Survey.Protocols.APaperListRsp.Parser, new[]{ "ReturnMessage", "List", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.GetAPaperReq), global::Survey.Protocols.GetAPaperReq.Parser, new[]{ "ClientIp", "Identity", "XRequestId", "PaperId", "CheckRole" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.APaperRsp), global::Survey.Protocols.APaperRsp.Parser, new[]{ "ReturnMessage", "Apaper", "Qpaper" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.GetAPaperStaDetailReq), global::Survey.Protocols.GetAPaperStaDetailReq.Parser, new[]{ "ClientIp", "Identity", "XRequestId", "QpaperId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.APaperStaDetailRsp), global::Survey.Protocols.APaperStaDetailRsp.Parser, new[]{ "ReturnMessage", "StaDetail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.DTOAPaper), global::Survey.Protocols.DTOAPaper.Parser, new[]{ "ApaperId", "QpaperId", "QpaperSubject", "QpaperUserId", "UserId", "CreateTime", "Remark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.DTOAPaperWithAnswers), global::Survey.Protocols.DTOAPaperWithAnswers.Parser, new[]{ "ApaperId", "QpaperId", "UserId", "CreateTime", "Remark", "Answers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Protocols.DTOAnswer), global::Survey.Protocols.DTOAnswer.Parser, new[]{ "AnswerId", "ApaperId", "QuestionId", "ObjectiveAnswer", "SubjectiveAnswer" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 什么字段都没有，请求
  /// </summary>
  public sealed partial class SaveAPaperReq : pb::IMessage<SaveAPaperReq> {
    private static readonly pb::MessageParser<SaveAPaperReq> _parser = new pb::MessageParser<SaveAPaperReq>(() => new SaveAPaperReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaveAPaperReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.ApaperReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveAPaperReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveAPaperReq(SaveAPaperReq other) : this() {
      clientIp_ = other.clientIp_;
      identity_ = other.identity_;
      xRequestId_ = other.xRequestId_;
      qpaperId_ = other.qpaperId_;
      userId_ = other.userId_;
      remark_ = other.remark_;
      answers_ = other.answers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveAPaperReq Clone() {
      return new SaveAPaperReq(this);
    }

    /// <summary>Field number for the "client_ip" field.</summary>
    public const int ClientIpFieldNumber = 1;
    private string clientIp_ = "";
    /// <summary>
    ///用户端IP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientIp {
      get { return clientIp_; }
      set {
        clientIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 2;
    private string identity_ = "";
    /// <summary>
    /// 用户标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Identity {
      get { return identity_; }
      set {
        identity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x_request_id" field.</summary>
    public const int XRequestIdFieldNumber = 3;
    private string xRequestId_ = "";
    /// <summary>
    ///请求的唯一标识，用于服务间传递
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string XRequestId {
      get { return xRequestId_; }
      set {
        xRequestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qpaper_id" field.</summary>
    public const int QpaperIdFieldNumber = 12;
    private int qpaperId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QpaperId {
      get { return qpaperId_; }
      set {
        qpaperId_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 13;
    private string userId_ = "";
    /// <summary>
    ///答卷用户ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "remark" field.</summary>
    public const int RemarkFieldNumber = 15;
    private string remark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "answers" field.</summary>
    public const int AnswersFieldNumber = 16;
    private static readonly pb::FieldCodec<global::Survey.Protocols.DTOAnswer> _repeated_answers_codec
        = pb::FieldCodec.ForMessage(130, global::Survey.Protocols.DTOAnswer.Parser);
    private readonly pbc::RepeatedField<global::Survey.Protocols.DTOAnswer> answers_ = new pbc::RepeatedField<global::Survey.Protocols.DTOAnswer>();
    /// <summary>
    /// 答案信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Survey.Protocols.DTOAnswer> Answers {
      get { return answers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaveAPaperReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaveAPaperReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientIp != other.ClientIp) return false;
      if (Identity != other.Identity) return false;
      if (XRequestId != other.XRequestId) return false;
      if (QpaperId != other.QpaperId) return false;
      if (UserId != other.UserId) return false;
      if (Remark != other.Remark) return false;
      if(!answers_.Equals(other.answers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientIp.Length != 0) hash ^= ClientIp.GetHashCode();
      if (Identity.Length != 0) hash ^= Identity.GetHashCode();
      if (XRequestId.Length != 0) hash ^= XRequestId.GetHashCode();
      if (QpaperId != 0) hash ^= QpaperId.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      hash ^= answers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientIp.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientIp);
      }
      if (Identity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Identity);
      }
      if (XRequestId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(XRequestId);
      }
      if (QpaperId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(QpaperId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(UserId);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Remark);
      }
      answers_.WriteTo(output, _repeated_answers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientIp);
      }
      if (Identity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Identity);
      }
      if (XRequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(XRequestId);
      }
      if (QpaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QpaperId);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      size += answers_.CalculateSize(_repeated_answers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaveAPaperReq other) {
      if (other == null) {
        return;
      }
      if (other.ClientIp.Length != 0) {
        ClientIp = other.ClientIp;
      }
      if (other.Identity.Length != 0) {
        Identity = other.Identity;
      }
      if (other.XRequestId.Length != 0) {
        XRequestId = other.XRequestId;
      }
      if (other.QpaperId != 0) {
        QpaperId = other.QpaperId;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      answers_.Add(other.answers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientIp = input.ReadString();
            break;
          }
          case 18: {
            Identity = input.ReadString();
            break;
          }
          case 26: {
            XRequestId = input.ReadString();
            break;
          }
          case 96: {
            QpaperId = input.ReadInt32();
            break;
          }
          case 106: {
            UserId = input.ReadString();
            break;
          }
          case 122: {
            Remark = input.ReadString();
            break;
          }
          case 130: {
            answers_.AddEntriesFrom(input, _repeated_answers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SaveAPaperRsp : pb::IMessage<SaveAPaperRsp> {
    private static readonly pb::MessageParser<SaveAPaperRsp> _parser = new pb::MessageParser<SaveAPaperRsp>(() => new SaveAPaperRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaveAPaperRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.ApaperReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveAPaperRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveAPaperRsp(SaveAPaperRsp other) : this() {
      returnMessage_ = other.returnMessage_;
      apaperId_ = other.apaperId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveAPaperRsp Clone() {
      return new SaveAPaperRsp(this);
    }

    /// <summary>Field number for the "return_message" field.</summary>
    public const int ReturnMessageFieldNumber = 1;
    private string returnMessage_ = "";
    /// <summary>
    ///返回错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReturnMessage {
      get { return returnMessage_; }
      set {
        returnMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "apaper_id" field.</summary>
    public const int ApaperIdFieldNumber = 3;
    private int apaperId_;
    /// <summary>
    /// 保存后的问卷ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApaperId {
      get { return apaperId_; }
      set {
        apaperId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaveAPaperRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaveAPaperRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnMessage != other.ReturnMessage) return false;
      if (ApaperId != other.ApaperId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnMessage.Length != 0) hash ^= ReturnMessage.GetHashCode();
      if (ApaperId != 0) hash ^= ApaperId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReturnMessage);
      }
      if (ApaperId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ApaperId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReturnMessage);
      }
      if (ApaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApaperId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaveAPaperRsp other) {
      if (other == null) {
        return;
      }
      if (other.ReturnMessage.Length != 0) {
        ReturnMessage = other.ReturnMessage;
      }
      if (other.ApaperId != 0) {
        ApaperId = other.ApaperId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReturnMessage = input.ReadString();
            break;
          }
          case 24: {
            ApaperId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 查询问卷的请求
  /// </summary>
  public sealed partial class QueryAPaperReq : pb::IMessage<QueryAPaperReq> {
    private static readonly pb::MessageParser<QueryAPaperReq> _parser = new pb::MessageParser<QueryAPaperReq>(() => new QueryAPaperReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryAPaperReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.ApaperReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryAPaperReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryAPaperReq(QueryAPaperReq other) : this() {
      clientIp_ = other.clientIp_;
      identity_ = other.identity_;
      xRequestId_ = other.xRequestId_;
      qtext_ = other.qtext_;
      qpaperId_ = other.qpaperId_;
      page_ = other.page_;
      rp_ = other.rp_;
      checkRole_ = other.checkRole_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryAPaperReq Clone() {
      return new QueryAPaperReq(this);
    }

    /// <summary>Field number for the "client_ip" field.</summary>
    public const int ClientIpFieldNumber = 1;
    private string clientIp_ = "";
    /// <summary>
    ///用户端IP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientIp {
      get { return clientIp_; }
      set {
        clientIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 2;
    private string identity_ = "";
    /// <summary>
    /// 用户标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Identity {
      get { return identity_; }
      set {
        identity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x_request_id" field.</summary>
    public const int XRequestIdFieldNumber = 3;
    private string xRequestId_ = "";
    /// <summary>
    ///请求的唯一标识，用于服务间传递
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string XRequestId {
      get { return xRequestId_; }
      set {
        xRequestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qtext" field.</summary>
    public const int QtextFieldNumber = 11;
    private string qtext_ = "";
    /// <summary>
    ///主题 模糊搜索
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Qtext {
      get { return qtext_; }
      set {
        qtext_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qpaper_id" field.</summary>
    public const int QpaperIdFieldNumber = 12;
    private int qpaperId_;
    /// <summary>
    ///问卷ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QpaperId {
      get { return qpaperId_; }
      set {
        qpaperId_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 13;
    private int page_;
    /// <summary>
    ///分页索引
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "rp" field.</summary>
    public const int RpFieldNumber = 14;
    private int rp_;
    /// <summary>
    ///每页记录数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rp {
      get { return rp_; }
      set {
        rp_ = value;
      }
    }

    /// <summary>Field number for the "check_role" field.</summary>
    public const int CheckRoleFieldNumber = 15;
    private bool checkRole_;
    /// <summary>
    ///检查角色
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CheckRole {
      get { return checkRole_; }
      set {
        checkRole_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryAPaperReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryAPaperReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientIp != other.ClientIp) return false;
      if (Identity != other.Identity) return false;
      if (XRequestId != other.XRequestId) return false;
      if (Qtext != other.Qtext) return false;
      if (QpaperId != other.QpaperId) return false;
      if (Page != other.Page) return false;
      if (Rp != other.Rp) return false;
      if (CheckRole != other.CheckRole) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientIp.Length != 0) hash ^= ClientIp.GetHashCode();
      if (Identity.Length != 0) hash ^= Identity.GetHashCode();
      if (XRequestId.Length != 0) hash ^= XRequestId.GetHashCode();
      if (Qtext.Length != 0) hash ^= Qtext.GetHashCode();
      if (QpaperId != 0) hash ^= QpaperId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (Rp != 0) hash ^= Rp.GetHashCode();
      if (CheckRole != false) hash ^= CheckRole.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientIp.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientIp);
      }
      if (Identity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Identity);
      }
      if (XRequestId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(XRequestId);
      }
      if (Qtext.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Qtext);
      }
      if (QpaperId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(QpaperId);
      }
      if (Page != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Page);
      }
      if (Rp != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Rp);
      }
      if (CheckRole != false) {
        output.WriteRawTag(120);
        output.WriteBool(CheckRole);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientIp);
      }
      if (Identity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Identity);
      }
      if (XRequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(XRequestId);
      }
      if (Qtext.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Qtext);
      }
      if (QpaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QpaperId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
      }
      if (Rp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rp);
      }
      if (CheckRole != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryAPaperReq other) {
      if (other == null) {
        return;
      }
      if (other.ClientIp.Length != 0) {
        ClientIp = other.ClientIp;
      }
      if (other.Identity.Length != 0) {
        Identity = other.Identity;
      }
      if (other.XRequestId.Length != 0) {
        XRequestId = other.XRequestId;
      }
      if (other.Qtext.Length != 0) {
        Qtext = other.Qtext;
      }
      if (other.QpaperId != 0) {
        QpaperId = other.QpaperId;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.Rp != 0) {
        Rp = other.Rp;
      }
      if (other.CheckRole != false) {
        CheckRole = other.CheckRole;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientIp = input.ReadString();
            break;
          }
          case 18: {
            Identity = input.ReadString();
            break;
          }
          case 26: {
            XRequestId = input.ReadString();
            break;
          }
          case 90: {
            Qtext = input.ReadString();
            break;
          }
          case 96: {
            QpaperId = input.ReadInt32();
            break;
          }
          case 104: {
            Page = input.ReadInt32();
            break;
          }
          case 112: {
            Rp = input.ReadInt32();
            break;
          }
          case 120: {
            CheckRole = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 查询问卷的列表
  /// </summary>
  public sealed partial class APaperListRsp : pb::IMessage<APaperListRsp> {
    private static readonly pb::MessageParser<APaperListRsp> _parser = new pb::MessageParser<APaperListRsp>(() => new APaperListRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<APaperListRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.ApaperReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APaperListRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APaperListRsp(APaperListRsp other) : this() {
      returnMessage_ = other.returnMessage_;
      list_ = other.list_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APaperListRsp Clone() {
      return new APaperListRsp(this);
    }

    /// <summary>Field number for the "return_message" field.</summary>
    public const int ReturnMessageFieldNumber = 1;
    private string returnMessage_ = "";
    /// <summary>
    ///返回错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReturnMessage {
      get { return returnMessage_; }
      set {
        returnMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Survey.Protocols.DTOAPaper> _repeated_list_codec
        = pb::FieldCodec.ForMessage(90, global::Survey.Protocols.DTOAPaper.Parser);
    private readonly pbc::RepeatedField<global::Survey.Protocols.DTOAPaper> list_ = new pbc::RepeatedField<global::Survey.Protocols.DTOAPaper>();
    /// <summary>
    /// 答卷列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Survey.Protocols.DTOAPaper> List {
      get { return list_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 15;
    private int total_;
    /// <summary>
    ///每页的记录数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as APaperListRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(APaperListRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnMessage != other.ReturnMessage) return false;
      if(!list_.Equals(other.list_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnMessage.Length != 0) hash ^= ReturnMessage.GetHashCode();
      hash ^= list_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReturnMessage);
      }
      list_.WriteTo(output, _repeated_list_codec);
      if (Total != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReturnMessage);
      }
      size += list_.CalculateSize(_repeated_list_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(APaperListRsp other) {
      if (other == null) {
        return;
      }
      if (other.ReturnMessage.Length != 0) {
        ReturnMessage = other.ReturnMessage;
      }
      list_.Add(other.list_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReturnMessage = input.ReadString();
            break;
          }
          case 90: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
          case 120: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 获取单个问卷的请求
  /// </summary>
  public sealed partial class GetAPaperReq : pb::IMessage<GetAPaperReq> {
    private static readonly pb::MessageParser<GetAPaperReq> _parser = new pb::MessageParser<GetAPaperReq>(() => new GetAPaperReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAPaperReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.ApaperReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAPaperReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAPaperReq(GetAPaperReq other) : this() {
      clientIp_ = other.clientIp_;
      identity_ = other.identity_;
      xRequestId_ = other.xRequestId_;
      paperId_ = other.paperId_;
      checkRole_ = other.checkRole_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAPaperReq Clone() {
      return new GetAPaperReq(this);
    }

    /// <summary>Field number for the "client_ip" field.</summary>
    public const int ClientIpFieldNumber = 1;
    private string clientIp_ = "";
    /// <summary>
    ///用户端IP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientIp {
      get { return clientIp_; }
      set {
        clientIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 2;
    private string identity_ = "";
    /// <summary>
    /// 用户标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Identity {
      get { return identity_; }
      set {
        identity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x_request_id" field.</summary>
    public const int XRequestIdFieldNumber = 3;
    private string xRequestId_ = "";
    /// <summary>
    ///请求的唯一标识，用于服务间传递
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string XRequestId {
      get { return xRequestId_; }
      set {
        xRequestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "paper_id" field.</summary>
    public const int PaperIdFieldNumber = 11;
    private int paperId_;
    /// <summary>
    /// 答卷ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PaperId {
      get { return paperId_; }
      set {
        paperId_ = value;
      }
    }

    /// <summary>Field number for the "check_role" field.</summary>
    public const int CheckRoleFieldNumber = 12;
    private bool checkRole_;
    /// <summary>
    /// 是否校验权限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CheckRole {
      get { return checkRole_; }
      set {
        checkRole_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAPaperReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAPaperReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientIp != other.ClientIp) return false;
      if (Identity != other.Identity) return false;
      if (XRequestId != other.XRequestId) return false;
      if (PaperId != other.PaperId) return false;
      if (CheckRole != other.CheckRole) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientIp.Length != 0) hash ^= ClientIp.GetHashCode();
      if (Identity.Length != 0) hash ^= Identity.GetHashCode();
      if (XRequestId.Length != 0) hash ^= XRequestId.GetHashCode();
      if (PaperId != 0) hash ^= PaperId.GetHashCode();
      if (CheckRole != false) hash ^= CheckRole.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientIp.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientIp);
      }
      if (Identity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Identity);
      }
      if (XRequestId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(XRequestId);
      }
      if (PaperId != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(PaperId);
      }
      if (CheckRole != false) {
        output.WriteRawTag(96);
        output.WriteBool(CheckRole);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientIp);
      }
      if (Identity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Identity);
      }
      if (XRequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(XRequestId);
      }
      if (PaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PaperId);
      }
      if (CheckRole != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAPaperReq other) {
      if (other == null) {
        return;
      }
      if (other.ClientIp.Length != 0) {
        ClientIp = other.ClientIp;
      }
      if (other.Identity.Length != 0) {
        Identity = other.Identity;
      }
      if (other.XRequestId.Length != 0) {
        XRequestId = other.XRequestId;
      }
      if (other.PaperId != 0) {
        PaperId = other.PaperId;
      }
      if (other.CheckRole != false) {
        CheckRole = other.CheckRole;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientIp = input.ReadString();
            break;
          }
          case 18: {
            Identity = input.ReadString();
            break;
          }
          case 26: {
            XRequestId = input.ReadString();
            break;
          }
          case 88: {
            PaperId = input.ReadInt32();
            break;
          }
          case 96: {
            CheckRole = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 包括单个问卷信息的响应
  /// </summary>
  public sealed partial class APaperRsp : pb::IMessage<APaperRsp> {
    private static readonly pb::MessageParser<APaperRsp> _parser = new pb::MessageParser<APaperRsp>(() => new APaperRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<APaperRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.ApaperReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APaperRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APaperRsp(APaperRsp other) : this() {
      returnMessage_ = other.returnMessage_;
      Apaper = other.apaper_ != null ? other.Apaper.Clone() : null;
      Qpaper = other.qpaper_ != null ? other.Qpaper.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APaperRsp Clone() {
      return new APaperRsp(this);
    }

    /// <summary>Field number for the "return_message" field.</summary>
    public const int ReturnMessageFieldNumber = 1;
    private string returnMessage_ = "";
    /// <summary>
    ///返回错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReturnMessage {
      get { return returnMessage_; }
      set {
        returnMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "apaper" field.</summary>
    public const int ApaperFieldNumber = 11;
    private global::Survey.Protocols.DTOAPaperWithAnswers apaper_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Survey.Protocols.DTOAPaperWithAnswers Apaper {
      get { return apaper_; }
      set {
        apaper_ = value;
      }
    }

    /// <summary>Field number for the "qpaper" field.</summary>
    public const int QpaperFieldNumber = 12;
    private global::Survey.Protocols.DTOQPaperWithQuestion qpaper_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Survey.Protocols.DTOQPaperWithQuestion Qpaper {
      get { return qpaper_; }
      set {
        qpaper_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as APaperRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(APaperRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnMessage != other.ReturnMessage) return false;
      if (!object.Equals(Apaper, other.Apaper)) return false;
      if (!object.Equals(Qpaper, other.Qpaper)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnMessage.Length != 0) hash ^= ReturnMessage.GetHashCode();
      if (apaper_ != null) hash ^= Apaper.GetHashCode();
      if (qpaper_ != null) hash ^= Qpaper.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReturnMessage);
      }
      if (apaper_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Apaper);
      }
      if (qpaper_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Qpaper);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReturnMessage);
      }
      if (apaper_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Apaper);
      }
      if (qpaper_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Qpaper);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(APaperRsp other) {
      if (other == null) {
        return;
      }
      if (other.ReturnMessage.Length != 0) {
        ReturnMessage = other.ReturnMessage;
      }
      if (other.apaper_ != null) {
        if (apaper_ == null) {
          apaper_ = new global::Survey.Protocols.DTOAPaperWithAnswers();
        }
        Apaper.MergeFrom(other.Apaper);
      }
      if (other.qpaper_ != null) {
        if (qpaper_ == null) {
          qpaper_ = new global::Survey.Protocols.DTOQPaperWithQuestion();
        }
        Qpaper.MergeFrom(other.Qpaper);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReturnMessage = input.ReadString();
            break;
          }
          case 90: {
            if (apaper_ == null) {
              apaper_ = new global::Survey.Protocols.DTOAPaperWithAnswers();
            }
            input.ReadMessage(apaper_);
            break;
          }
          case 98: {
            if (qpaper_ == null) {
              qpaper_ = new global::Survey.Protocols.DTOQPaperWithQuestion();
            }
            input.ReadMessage(qpaper_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAPaperStaDetailReq : pb::IMessage<GetAPaperStaDetailReq> {
    private static readonly pb::MessageParser<GetAPaperStaDetailReq> _parser = new pb::MessageParser<GetAPaperStaDetailReq>(() => new GetAPaperStaDetailReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAPaperStaDetailReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.ApaperReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAPaperStaDetailReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAPaperStaDetailReq(GetAPaperStaDetailReq other) : this() {
      clientIp_ = other.clientIp_;
      identity_ = other.identity_;
      xRequestId_ = other.xRequestId_;
      qpaperId_ = other.qpaperId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAPaperStaDetailReq Clone() {
      return new GetAPaperStaDetailReq(this);
    }

    /// <summary>Field number for the "client_ip" field.</summary>
    public const int ClientIpFieldNumber = 1;
    private string clientIp_ = "";
    /// <summary>
    ///用户端IP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientIp {
      get { return clientIp_; }
      set {
        clientIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 2;
    private string identity_ = "";
    /// <summary>
    /// 用户标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Identity {
      get { return identity_; }
      set {
        identity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x_request_id" field.</summary>
    public const int XRequestIdFieldNumber = 3;
    private string xRequestId_ = "";
    /// <summary>
    ///请求的唯一标识，用于服务间传递
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string XRequestId {
      get { return xRequestId_; }
      set {
        xRequestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qpaper_id" field.</summary>
    public const int QpaperIdFieldNumber = 11;
    private int qpaperId_;
    /// <summary>
    /// 问卷ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QpaperId {
      get { return qpaperId_; }
      set {
        qpaperId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAPaperStaDetailReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAPaperStaDetailReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientIp != other.ClientIp) return false;
      if (Identity != other.Identity) return false;
      if (XRequestId != other.XRequestId) return false;
      if (QpaperId != other.QpaperId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientIp.Length != 0) hash ^= ClientIp.GetHashCode();
      if (Identity.Length != 0) hash ^= Identity.GetHashCode();
      if (XRequestId.Length != 0) hash ^= XRequestId.GetHashCode();
      if (QpaperId != 0) hash ^= QpaperId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientIp.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientIp);
      }
      if (Identity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Identity);
      }
      if (XRequestId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(XRequestId);
      }
      if (QpaperId != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(QpaperId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientIp);
      }
      if (Identity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Identity);
      }
      if (XRequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(XRequestId);
      }
      if (QpaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QpaperId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAPaperStaDetailReq other) {
      if (other == null) {
        return;
      }
      if (other.ClientIp.Length != 0) {
        ClientIp = other.ClientIp;
      }
      if (other.Identity.Length != 0) {
        Identity = other.Identity;
      }
      if (other.XRequestId.Length != 0) {
        XRequestId = other.XRequestId;
      }
      if (other.QpaperId != 0) {
        QpaperId = other.QpaperId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientIp = input.ReadString();
            break;
          }
          case 18: {
            Identity = input.ReadString();
            break;
          }
          case 26: {
            XRequestId = input.ReadString();
            break;
          }
          case 88: {
            QpaperId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class APaperStaDetailRsp : pb::IMessage<APaperStaDetailRsp> {
    private static readonly pb::MessageParser<APaperStaDetailRsp> _parser = new pb::MessageParser<APaperStaDetailRsp>(() => new APaperStaDetailRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<APaperStaDetailRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.ApaperReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APaperStaDetailRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APaperStaDetailRsp(APaperStaDetailRsp other) : this() {
      returnMessage_ = other.returnMessage_;
      staDetail_ = other.staDetail_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APaperStaDetailRsp Clone() {
      return new APaperStaDetailRsp(this);
    }

    /// <summary>Field number for the "return_message" field.</summary>
    public const int ReturnMessageFieldNumber = 1;
    private string returnMessage_ = "";
    /// <summary>
    ///返回错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReturnMessage {
      get { return returnMessage_; }
      set {
        returnMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sta_detail" field.</summary>
    public const int StaDetailFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Survey.Protocols.APaperStaDetail> _repeated_staDetail_codec
        = pb::FieldCodec.ForMessage(82, global::Survey.Protocols.APaperStaDetail.Parser);
    private readonly pbc::RepeatedField<global::Survey.Protocols.APaperStaDetail> staDetail_ = new pbc::RepeatedField<global::Survey.Protocols.APaperStaDetail>();
    /// <summary>
    ///统计信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Survey.Protocols.APaperStaDetail> StaDetail {
      get { return staDetail_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as APaperStaDetailRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(APaperStaDetailRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnMessage != other.ReturnMessage) return false;
      if(!staDetail_.Equals(other.staDetail_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnMessage.Length != 0) hash ^= ReturnMessage.GetHashCode();
      hash ^= staDetail_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReturnMessage);
      }
      staDetail_.WriteTo(output, _repeated_staDetail_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReturnMessage);
      }
      size += staDetail_.CalculateSize(_repeated_staDetail_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(APaperStaDetailRsp other) {
      if (other == null) {
        return;
      }
      if (other.ReturnMessage.Length != 0) {
        ReturnMessage = other.ReturnMessage;
      }
      staDetail_.Add(other.staDetail_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReturnMessage = input.ReadString();
            break;
          }
          case 82: {
            staDetail_.AddEntriesFrom(input, _repeated_staDetail_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DTOAPaper : pb::IMessage<DTOAPaper> {
    private static readonly pb::MessageParser<DTOAPaper> _parser = new pb::MessageParser<DTOAPaper>(() => new DTOAPaper());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DTOAPaper> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.ApaperReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOAPaper() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOAPaper(DTOAPaper other) : this() {
      apaperId_ = other.apaperId_;
      qpaperId_ = other.qpaperId_;
      qpaperSubject_ = other.qpaperSubject_;
      qpaperUserId_ = other.qpaperUserId_;
      userId_ = other.userId_;
      createTime_ = other.createTime_;
      remark_ = other.remark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOAPaper Clone() {
      return new DTOAPaper(this);
    }

    /// <summary>Field number for the "apaper_id" field.</summary>
    public const int ApaperIdFieldNumber = 1;
    private int apaperId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApaperId {
      get { return apaperId_; }
      set {
        apaperId_ = value;
      }
    }

    /// <summary>Field number for the "qpaper_id" field.</summary>
    public const int QpaperIdFieldNumber = 2;
    private int qpaperId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QpaperId {
      get { return qpaperId_; }
      set {
        qpaperId_ = value;
      }
    }

    /// <summary>Field number for the "qpaper_subject" field.</summary>
    public const int QpaperSubjectFieldNumber = 3;
    private string qpaperSubject_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QpaperSubject {
      get { return qpaperSubject_; }
      set {
        qpaperSubject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qpaper_user_id" field.</summary>
    public const int QpaperUserIdFieldNumber = 4;
    private string qpaperUserId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QpaperUserId {
      get { return qpaperUserId_; }
      set {
        qpaperUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 5;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 6;
    private string createTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreateTime {
      get { return createTime_; }
      set {
        createTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "remark" field.</summary>
    public const int RemarkFieldNumber = 7;
    private string remark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DTOAPaper);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DTOAPaper other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApaperId != other.ApaperId) return false;
      if (QpaperId != other.QpaperId) return false;
      if (QpaperSubject != other.QpaperSubject) return false;
      if (QpaperUserId != other.QpaperUserId) return false;
      if (UserId != other.UserId) return false;
      if (CreateTime != other.CreateTime) return false;
      if (Remark != other.Remark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApaperId != 0) hash ^= ApaperId.GetHashCode();
      if (QpaperId != 0) hash ^= QpaperId.GetHashCode();
      if (QpaperSubject.Length != 0) hash ^= QpaperSubject.GetHashCode();
      if (QpaperUserId.Length != 0) hash ^= QpaperUserId.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (CreateTime.Length != 0) hash ^= CreateTime.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApaperId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ApaperId);
      }
      if (QpaperId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(QpaperId);
      }
      if (QpaperSubject.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(QpaperSubject);
      }
      if (QpaperUserId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(QpaperUserId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UserId);
      }
      if (CreateTime.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreateTime);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Remark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApaperId);
      }
      if (QpaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QpaperId);
      }
      if (QpaperSubject.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QpaperSubject);
      }
      if (QpaperUserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QpaperUserId);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (CreateTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreateTime);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DTOAPaper other) {
      if (other == null) {
        return;
      }
      if (other.ApaperId != 0) {
        ApaperId = other.ApaperId;
      }
      if (other.QpaperId != 0) {
        QpaperId = other.QpaperId;
      }
      if (other.QpaperSubject.Length != 0) {
        QpaperSubject = other.QpaperSubject;
      }
      if (other.QpaperUserId.Length != 0) {
        QpaperUserId = other.QpaperUserId;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.CreateTime.Length != 0) {
        CreateTime = other.CreateTime;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApaperId = input.ReadInt32();
            break;
          }
          case 16: {
            QpaperId = input.ReadInt32();
            break;
          }
          case 26: {
            QpaperSubject = input.ReadString();
            break;
          }
          case 34: {
            QpaperUserId = input.ReadString();
            break;
          }
          case 42: {
            UserId = input.ReadString();
            break;
          }
          case 50: {
            CreateTime = input.ReadString();
            break;
          }
          case 58: {
            Remark = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DTOAPaperWithAnswers : pb::IMessage<DTOAPaperWithAnswers> {
    private static readonly pb::MessageParser<DTOAPaperWithAnswers> _parser = new pb::MessageParser<DTOAPaperWithAnswers>(() => new DTOAPaperWithAnswers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DTOAPaperWithAnswers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.ApaperReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOAPaperWithAnswers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOAPaperWithAnswers(DTOAPaperWithAnswers other) : this() {
      apaperId_ = other.apaperId_;
      qpaperId_ = other.qpaperId_;
      userId_ = other.userId_;
      createTime_ = other.createTime_;
      remark_ = other.remark_;
      answers_ = other.answers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOAPaperWithAnswers Clone() {
      return new DTOAPaperWithAnswers(this);
    }

    /// <summary>Field number for the "apaper_id" field.</summary>
    public const int ApaperIdFieldNumber = 1;
    private int apaperId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApaperId {
      get { return apaperId_; }
      set {
        apaperId_ = value;
      }
    }

    /// <summary>Field number for the "qpaper_id" field.</summary>
    public const int QpaperIdFieldNumber = 2;
    private int qpaperId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QpaperId {
      get { return qpaperId_; }
      set {
        qpaperId_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 5;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 6;
    private string createTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreateTime {
      get { return createTime_; }
      set {
        createTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "remark" field.</summary>
    public const int RemarkFieldNumber = 7;
    private string remark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "answers" field.</summary>
    public const int AnswersFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Survey.Protocols.DTOAnswer> _repeated_answers_codec
        = pb::FieldCodec.ForMessage(82, global::Survey.Protocols.DTOAnswer.Parser);
    private readonly pbc::RepeatedField<global::Survey.Protocols.DTOAnswer> answers_ = new pbc::RepeatedField<global::Survey.Protocols.DTOAnswer>();
    /// <summary>
    /// 答案信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Survey.Protocols.DTOAnswer> Answers {
      get { return answers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DTOAPaperWithAnswers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DTOAPaperWithAnswers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApaperId != other.ApaperId) return false;
      if (QpaperId != other.QpaperId) return false;
      if (UserId != other.UserId) return false;
      if (CreateTime != other.CreateTime) return false;
      if (Remark != other.Remark) return false;
      if(!answers_.Equals(other.answers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApaperId != 0) hash ^= ApaperId.GetHashCode();
      if (QpaperId != 0) hash ^= QpaperId.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (CreateTime.Length != 0) hash ^= CreateTime.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      hash ^= answers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApaperId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ApaperId);
      }
      if (QpaperId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(QpaperId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UserId);
      }
      if (CreateTime.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreateTime);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Remark);
      }
      answers_.WriteTo(output, _repeated_answers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApaperId);
      }
      if (QpaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QpaperId);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (CreateTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreateTime);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      size += answers_.CalculateSize(_repeated_answers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DTOAPaperWithAnswers other) {
      if (other == null) {
        return;
      }
      if (other.ApaperId != 0) {
        ApaperId = other.ApaperId;
      }
      if (other.QpaperId != 0) {
        QpaperId = other.QpaperId;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.CreateTime.Length != 0) {
        CreateTime = other.CreateTime;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      answers_.Add(other.answers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApaperId = input.ReadInt32();
            break;
          }
          case 16: {
            QpaperId = input.ReadInt32();
            break;
          }
          case 42: {
            UserId = input.ReadString();
            break;
          }
          case 50: {
            CreateTime = input.ReadString();
            break;
          }
          case 58: {
            Remark = input.ReadString();
            break;
          }
          case 82: {
            answers_.AddEntriesFrom(input, _repeated_answers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DTOAnswer : pb::IMessage<DTOAnswer> {
    private static readonly pb::MessageParser<DTOAnswer> _parser = new pb::MessageParser<DTOAnswer>(() => new DTOAnswer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DTOAnswer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Protocols.ApaperReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOAnswer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOAnswer(DTOAnswer other) : this() {
      answerId_ = other.answerId_;
      apaperId_ = other.apaperId_;
      questionId_ = other.questionId_;
      objectiveAnswer_ = other.objectiveAnswer_;
      subjectiveAnswer_ = other.subjectiveAnswer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DTOAnswer Clone() {
      return new DTOAnswer(this);
    }

    /// <summary>Field number for the "answer_id" field.</summary>
    public const int AnswerIdFieldNumber = 1;
    private string answerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AnswerId {
      get { return answerId_; }
      set {
        answerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "apaper_id" field.</summary>
    public const int ApaperIdFieldNumber = 2;
    private int apaperId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApaperId {
      get { return apaperId_; }
      set {
        apaperId_ = value;
      }
    }

    /// <summary>Field number for the "question_id" field.</summary>
    public const int QuestionIdFieldNumber = 3;
    private string questionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QuestionId {
      get { return questionId_; }
      set {
        questionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "objective_answer" field.</summary>
    public const int ObjectiveAnswerFieldNumber = 4;
    private int objectiveAnswer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjectiveAnswer {
      get { return objectiveAnswer_; }
      set {
        objectiveAnswer_ = value;
      }
    }

    /// <summary>Field number for the "subjective_answer" field.</summary>
    public const int SubjectiveAnswerFieldNumber = 5;
    private string subjectiveAnswer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubjectiveAnswer {
      get { return subjectiveAnswer_; }
      set {
        subjectiveAnswer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DTOAnswer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DTOAnswer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AnswerId != other.AnswerId) return false;
      if (ApaperId != other.ApaperId) return false;
      if (QuestionId != other.QuestionId) return false;
      if (ObjectiveAnswer != other.ObjectiveAnswer) return false;
      if (SubjectiveAnswer != other.SubjectiveAnswer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AnswerId.Length != 0) hash ^= AnswerId.GetHashCode();
      if (ApaperId != 0) hash ^= ApaperId.GetHashCode();
      if (QuestionId.Length != 0) hash ^= QuestionId.GetHashCode();
      if (ObjectiveAnswer != 0) hash ^= ObjectiveAnswer.GetHashCode();
      if (SubjectiveAnswer.Length != 0) hash ^= SubjectiveAnswer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AnswerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AnswerId);
      }
      if (ApaperId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ApaperId);
      }
      if (QuestionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(QuestionId);
      }
      if (ObjectiveAnswer != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ObjectiveAnswer);
      }
      if (SubjectiveAnswer.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SubjectiveAnswer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AnswerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnswerId);
      }
      if (ApaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApaperId);
      }
      if (QuestionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QuestionId);
      }
      if (ObjectiveAnswer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjectiveAnswer);
      }
      if (SubjectiveAnswer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubjectiveAnswer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DTOAnswer other) {
      if (other == null) {
        return;
      }
      if (other.AnswerId.Length != 0) {
        AnswerId = other.AnswerId;
      }
      if (other.ApaperId != 0) {
        ApaperId = other.ApaperId;
      }
      if (other.QuestionId.Length != 0) {
        QuestionId = other.QuestionId;
      }
      if (other.ObjectiveAnswer != 0) {
        ObjectiveAnswer = other.ObjectiveAnswer;
      }
      if (other.SubjectiveAnswer.Length != 0) {
        SubjectiveAnswer = other.SubjectiveAnswer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AnswerId = input.ReadString();
            break;
          }
          case 16: {
            ApaperId = input.ReadInt32();
            break;
          }
          case 26: {
            QuestionId = input.ReadString();
            break;
          }
          case 32: {
            ObjectiveAnswer = input.ReadInt32();
            break;
          }
          case 42: {
            SubjectiveAnswer = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
