// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/apaperFacadeService_10002.proto

#region Designer generated code

using Tomato.Protocol.Amp;
using Tomato.Rpc;
using Google.Protobuf;
using System.Threading.Tasks;

namespace Survey.Protocols
{
    //start for class AbstractAPaperFacadeService
    public abstract class APaperFacadeServiceBase : ServiceActor
    {
        protected override int ServiceId => 10002;


        public override Task<AmpMessage> ProcessAsync(AmpMessage req)
        {
            switch (req.MessageId)
            {

                //方法 APaperFacadeService.GetAPaperSta
                case 1: return this.ProcessGetAPaperStaAsync(req);

                default: return base.ProcessNotFoundAsync(req);
            }
        }



        //调用委托
        private async Task<AmpMessage> ProcessGetAPaperStaAsync(AmpMessage req)
        {
            GetQPaperStaReq request = null;

            if (req.Data == null)
            {
                request = new GetQPaperStaReq();
            }
            else
            {
                request = GetQPaperStaReq.Parser.ParseFrom(req.Data);
            }

            req.FriendlyServiceName = "APaperFacadeService.GetAPaperSta";

            var result = await GetAPaperStaAsync(request);
            var response = AmpMessage.CreateResponseMessage(req.ServiceId, req.MessageId);

            response.FriendlyServiceName = "APaperFacadeService.GetAPaperSta";
            response.Code = result.Code;
            if (result.Data != null)
            {
                response.Data = result.Data.ToByteArray();
            }
            return response;
        }
        //抽象方法
        public abstract Task<RpcResult<QPaperStaRsp>> GetAPaperStaAsync( GetQPaperStaReq req);

    }

    //end for class AbstractAPaperFacadeService
}

#endregion Designer generated code